/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.martijncourteaux.axisgamehelper;

import java.awt.BorderLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JComponent;
import javax.swing.JFileChooser;

/**
 *
 * @author martijncourteaux
 */
public class DrawFrame extends javax.swing.JFrame
{

    private AxisPanel panel;
    private List<Vector2d> path = new ArrayList<Vector2d>();
    private List<Vector2d> rages = new ArrayList<Vector2d>();

    /**
     * Creates new form DrawFrame
     */
    public DrawFrame(File img)
    {
        initComponents();
        panel = new AxisPanel(img);
        pnlDraw.setLayout(new BorderLayout());
        pnlDraw.add(panel);
        pack();
    }

    public double lerp(double x, double x1, double x2, double q0, double q1)
    {
        return ((x2 - x) / (x2 - x1)) * q0 + ((x - x1) / (x2 - x1)) * q1;
    }

    public void calc()
    {
        List<Vector2d> lPath = new ArrayList<Vector2d>();
        List<Vector2d> lRages = new ArrayList<Vector2d>();

        for (int i = 1; i < path.size(); ++i)
        {
            Vector2d v = new Vector2d(path.get(i));
            v.sub(path.get(0));
            lPath.add(v);

            v.x = v.x / FieldConsts.w * 50;
            v.y = v.y / FieldConsts.h * -30;
        }
        if (!path.isEmpty())
        {
            for (int i = 0; i < rages.size(); ++i)
            {
                Vector2d v = new Vector2d(rages.get(i));
                v.x -= path.get(0).x;
                lRages.add(v);

                v.x = v.x / FieldConsts.w * 50;
            }
        }

        fldOutput.setText(FunctionCreator.generateFunction(lPath, lRages));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        controlPnl = new javax.swing.JPanel();
        btnOpen = new javax.swing.JButton();
        btnPath = new javax.swing.JToggleButton();
        btnRages = new javax.swing.JToggleButton();
        fldOutput = new javax.swing.JTextField();
        pnlDraw = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Axis The Game Helper");

        controlPnl.setLayout(new java.awt.GridLayout());

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnOpenActionPerformed(evt);
            }
        });
        controlPnl.add(btnOpen);

        btnPath.setText("Path");
        btnPath.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnPathActionPerformed(evt);
            }
        });
        controlPnl.add(btnPath);

        btnRages.setText("Rages");
        btnRages.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnRagesActionPerformed(evt);
            }
        });
        controlPnl.add(btnRages);
        controlPnl.add(fldOutput);

        getContentPane().add(controlPnl, java.awt.BorderLayout.PAGE_START);

        pnlDraw.setLayout(new java.awt.BorderLayout());
        getContentPane().add(pnlDraw, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPathActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnPathActionPerformed
    {//GEN-HEADEREND:event_btnPathActionPerformed
        if (btnPath.isSelected())
        {
            path.clear();
            rages.clear();
            btnRages.setSelected(false);
        }
    }//GEN-LAST:event_btnPathActionPerformed

    private void btnRagesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnRagesActionPerformed
    {//GEN-HEADEREND:event_btnRagesActionPerformed
        if (btnRages.isSelected())
        {
            rages.clear();
            btnPath.setSelected(false);
        }
    }//GEN-LAST:event_btnRagesActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnOpenActionPerformed
    {//GEN-HEADEREND:event_btnOpenActionPerformed

        JFileChooser fc = new JFileChooser(new File(new File(System.getProperty("user.home")), "Desktop"));
        if (fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
        {
            panel.setImage(fc.getSelectedFile());
            path.clear();
            rages.clear();
            calc();
        }

    }//GEN-LAST:event_btnOpenActionPerformed

    public class AxisPanel extends JComponent implements MouseMotionListener, MouseListener
    {

        private BufferedImage img;
        private Vector2d mouse = new Vector2d();

        public AxisPanel(File img)
        {
            addMouseMotionListener(this);
            addMouseListener(this);
            setImage(img);
        }
        
        public void setImage(File img)
        {
            try
            {
                this.img = ImageIO.read(img);
            } catch (IOException ex)
            {
                Logger.getLogger(DrawFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        @Override
        protected void paintComponent(Graphics grphcs)
        {
            super.paintComponent(grphcs);

            Graphics2D g = (Graphics2D) grphcs;

            g.drawImage(img, 0, 0, getWidth(), getHeight(), null);
            g.drawLine(0, (int) mouse.y, getWidth(), (int) mouse.y);
            g.drawLine((int) mouse.x, 0, (int) mouse.x, getHeight());

        }

        @Override
        public void mouseDragged(MouseEvent me)
        {
        }

        @Override
        public void mouseMoved(MouseEvent me)
        {
            mouse.x = me.getX();
            mouse.y = me.getY();
            repaint();
        }

        @Override
        public void mouseClicked(MouseEvent me)
        {
            Vector2d vec = new Vector2d();

            vec.x = (double) me.getX() / getWidth();
            vec.y = (double) me.getY() / getHeight();

            if (btnPath.isSelected())
            {
                path.add(vec);
            } else if (btnRages.isSelected())
            {
                vec.y = 1.0;
                rages.add(vec);
            }

            calc();
        }

        @Override
        public void mousePressed(MouseEvent me)
        {
        }

        @Override
        public void mouseReleased(MouseEvent me)
        {
        }

        @Override
        public void mouseEntered(MouseEvent me)
        {
        }

        @Override
        public void mouseExited(MouseEvent me)
        {
        }

    }

    private static class FieldConsts
    {

        private static float _w = 820;
        private static float _h = 493;
        private static float _x = 87;
        private static float _y = 53;
        private static float _fw = 992;
        private static float _fh = 595;

        public static float w = _w / _fw;
        public static float h = _h / _fh;

        public static float x0 = _x / _fw;
        public static float x1 = _x / _fw + w;
        public static float y0 = _y / _fh;
        public static float y1 = _y / _fh + h;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOpen;
    private javax.swing.JToggleButton btnPath;
    private javax.swing.JToggleButton btnRages;
    private javax.swing.JPanel controlPnl;
    private javax.swing.JTextField fldOutput;
    private javax.swing.JPanel pnlDraw;
    // End of variables declaration//GEN-END:variables
}
